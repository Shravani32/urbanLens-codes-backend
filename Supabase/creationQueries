-- create table users (
--     user_id uuid primary key default gen_random_uuid(),
--     name text not null,
--     email text unique not null,
--     password text not null,
--     phone_number text not null,
--     role text check (role in ('admin', 'commissioner', 'departmentHead', 'staffHead', 'localPeople')) not null,
--     profile_picture text,
--     department_name text
-- );

-- create table issues (
--     issue_id uuid primary key default gen_random_uuid(),
--     title text not null,
--     description text,
--     photo_complaint text,  -- Image link at the time of complaint
--     photo_resolved text,   -- Image link after resolution by staffHead
--     status text check (status in ('unassigned', 'in progress', 'resolved')) default 'unassigned',
--     created_date timestamp default now(),
--     assigned_to_staffHead uuid references users(user_id) on delete set null,
--     resolved_date timestamp,
--     likes int default 0,
--     location text not null
-- );

-- create table assignments (
--     assignment_id uuid primary key default gen_random_uuid(),
--     assigned_to_staffHead uuid references users(user_id) on delete cascade,
--     issue_id uuid references issues(issue_id) on delete cascade,
--     status text check (status in ('in progress', 'resolved')) default 'in progress',
--     created_date timestamp default now(),
--     resolved_date timestamp
-- );

-- ALTER TABLE issues 
-- ADD COLUMN reported_by UUID REFERENCES users(user_id) ON DELETE SET NULL,
-- DROP COLUMN likes;  -- Move likes to a separate table

-- CREATE TABLE likes (
--     id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
--     issue_id UUID REFERENCES issues(issue_id) ON DELETE CASCADE,
--     user_id UUID REFERENCES users(user_id) ON DELETE CASCADE, 
--     created_at TIMESTAMP DEFAULT now(),
--     UNIQUE(issue_id, user_id)  -- Ensures a user can like only once
-- );

-- ALTER TABLE issues 
-- ADD COLUMN likes_count INT DEFAULT 0,
-- ADD COLUMN dislikes_count INT DEFAULT 0,
-- DROP COLUMN reported_by;

-- DROP TABLE likes;/


-- CREATE TABLE departments (
--     department_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
--     name TEXT UNIQUE NOT NULL
-- );
-- ALTER TABLE issues 
-- ADD COLUMN department_id UUID REFERENCES departments(department_id) ON DELETE SET NULL;